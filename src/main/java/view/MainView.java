/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 * La classe MainView représent une des trois composant dans l'architecture
 * MVC,la vue.
 *
 * @author r.pina
 */
public class MainView extends javax.swing.JFrame {

    private PropertyChangeSupport listeners;

    /**
     * Creates new form MainView
     */
    public MainView() {
        this.listeners = new PropertyChangeSupport(this);
        initComponents();

        jScrollPane1.setViewportView(userList);

        //Déactiver le bouton "btnModif" par défaut lors de la génération du code
        this.btnModif.setEnabled(false);
        //Déactiver le bouton "btnSupprimer" par défaut lors de la génération du code
        this.btnSupprimer.setEnabled(false);

        //Contrôler le dynamique des bouton "btnSupprimer" et "btnModif"
        //si l'utilisateur ne selection aucune données dans liste les bouton restera déactiver
        userList.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                boolean isRowSelected = userList.getSelectedRow() != -1;
                btnModif.setEnabled(isRowSelected);
                btnSupprimer.setEnabled(isRowSelected);
            }
        });

    }

    /**
     * Méthode d'insertion de PropertyChangeListener au lisetener
     *
     * @param l
     */
    public void addPropertyChangeListener(PropertyChangeListener listener) {
        this.listeners.addPropertyChangeListener(listener);
    }

    /**
     * Méthode définir un liste modèle
     *
     * @param tableModel Table à générer
     */
    public void setTableModel(AbstractTableModel tableModel) {
        this.userList.setModel(tableModel);
        this.userList.removeColumn(this.userList.getColumn("id"));
    }

    /**
     * Méthode de récupérer l'id d'un utilisateur séléctionné
     *
     * @return Integer
     */
    public int getSelectedId() {
        return (Integer) this.userList.getModel().getValueAt(this.userList.getSelectedRow(), 0);
    }

    /**
     * Méthode de récupérer le nom d'un utilisateur séléctionné
     *
     * @return String
     */
    public String getSelectedNom() {
        return (String) this.userList.getModel().getValueAt(this.userList.getSelectedRow(), 1);
    }

    /**
     * Méthode de récupérer le prénom d'un utilisateur séléctionné
     *
     * @return String
     */
    public String getSelectedPrenom() {
        return (String) this.userList.getModel().getValueAt(this.userList.getSelectedRow(), 2);
    }

    /**
     * Méthode de récupérer l'adresse d'un utilisateur séléctionné
     *
     * @return String
     */
    public String getSelectedAdresse() {
        return (String) this.userList.getModel().getValueAt(this.userList.getSelectedRow(), 3);
    }

    /**
     * Méthode de récupérer le pseudo d'un utilisateur séléctionné
     *
     * @return String
     */
    public String getSelectedPseudo() {
        return (String) this.userList.getModel().getValueAt(this.userList.getSelectedRow(), 4);
    }

    /**
     * Méthode de récupérer le mot de passe d'un utilisateur séléctionné
     *
     * @return String
     */
    public String getSelectedMdp() {
        return (String) this.userList.getModel().getValueAt(this.userList.getSelectedRow(), 5);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userList = new javax.swing.JTable();
        btnModif = new javax.swing.JButton();
        btnSupprimer = new javax.swing.JButton();
        btnAjout = new javax.swing.JButton();
        userListTableTitre = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(userList);

        btnModif.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnModif.setText("Modifier");
        btnModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifActionPerformed(evt);
            }
        });

        btnSupprimer.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSupprimer.setText("Supprimer");
        btnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerActionPerformed(evt);
            }
        });

        btnAjout.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAjout.setText("Ajout");
        btnAjout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjoutActionPerformed(evt);
            }
        });

        userListTableTitre.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        userListTableTitre.setText("Gestionnaire d'utilisateurs");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAjout)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(userListTableTitre)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnModif)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnSupprimer))))
                .addGap(0, 178, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(userListTableTitre)
                .addGap(30, 30, 30)
                .addComponent(btnAjout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModif)
                    .addComponent(btnSupprimer))
                .addGap(101, 101, 101))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Méthode qui écoute lors d'un action sur le bouton "Modifier" de la
     * fenêtre principale.
     */
    private void btnModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifActionPerformed
        // TODO add your handling code here:
        this.listeners.firePropertyChange("openModifDialog", null, null);
    }//GEN-LAST:event_btnModifActionPerformed

    /**
     * Méthode qui écoute lors d'un action sur le bouton "Ajout" de la fenêtre
     * principale.
     */
    private void btnAjoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjoutActionPerformed
        this.listeners.firePropertyChange("openAddDialog", null, null);
    }//GEN-LAST:event_btnAjoutActionPerformed

    /**
     * Méthode qui écoute lors d'un action sur le bouton "Supprimer" de la
     * fenêtre principale.
     */
    private void btnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerActionPerformed
        // TODO add your handling code here:
        int userReponse = JOptionPane.showConfirmDialog(this, "Etes-vous sûr de supprimer ?");

        if (userReponse == JOptionPane.YES_OPTION) {
            this.listeners.firePropertyChange("validSupprimeUser", null, null);
        }
    }//GEN-LAST:event_btnSupprimerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjout;
    private javax.swing.JButton btnModif;
    private javax.swing.JButton btnSupprimer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable userList;
    private javax.swing.JLabel userListTableTitre;
    // End of variables declaration//GEN-END:variables
}
